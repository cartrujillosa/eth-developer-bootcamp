/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  PayableOverrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface ItemManagerInterface extends ethers.utils.Interface {
  functions: {
    "createItem(string,uint256)": FunctionFragment;
    "index()": FunctionFragment;
    "items(uint256)": FunctionFragment;
    "triggerDelivery(uint256)": FunctionFragment;
    "triggerPayment(uint256)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "createItem",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "index", values?: undefined): string;
  encodeFunctionData(functionFragment: "items", values: [BigNumberish]): string;
  encodeFunctionData(
    functionFragment: "triggerDelivery",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "triggerPayment",
    values: [BigNumberish]
  ): string;

  decodeFunctionResult(functionFragment: "createItem", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "index", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "items", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "triggerDelivery",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "triggerPayment",
    data: BytesLike
  ): Result;

  events: {
    "SupplyChainStep(uint256,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "SupplyChainStep"): EventFragment;
}

export class ItemManager extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: ItemManagerInterface;

  functions: {
    createItem(
      _id: string,
      _priceInWei: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "createItem(string,uint256)"(
      _id: string,
      _priceInWei: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    index(overrides?: CallOverrides): Promise<[BigNumber]>;

    "index()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    items(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [number, string, BigNumber] & {
        _step: number;
        _id: string;
        _priceInWei: BigNumber;
      }
    >;

    "items(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [number, string, BigNumber] & {
        _step: number;
        _id: string;
        _priceInWei: BigNumber;
      }
    >;

    triggerDelivery(
      _index: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "triggerDelivery(uint256)"(
      _index: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    triggerPayment(
      _index: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<ContractTransaction>;

    "triggerPayment(uint256)"(
      _index: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<ContractTransaction>;
  };

  createItem(
    _id: string,
    _priceInWei: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "createItem(string,uint256)"(
    _id: string,
    _priceInWei: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  index(overrides?: CallOverrides): Promise<BigNumber>;

  "index()"(overrides?: CallOverrides): Promise<BigNumber>;

  items(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [number, string, BigNumber] & {
      _step: number;
      _id: string;
      _priceInWei: BigNumber;
    }
  >;

  "items(uint256)"(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [number, string, BigNumber] & {
      _step: number;
      _id: string;
      _priceInWei: BigNumber;
    }
  >;

  triggerDelivery(
    _index: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "triggerDelivery(uint256)"(
    _index: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  triggerPayment(
    _index: BigNumberish,
    overrides?: PayableOverrides
  ): Promise<ContractTransaction>;

  "triggerPayment(uint256)"(
    _index: BigNumberish,
    overrides?: PayableOverrides
  ): Promise<ContractTransaction>;

  callStatic: {
    createItem(
      _id: string,
      _priceInWei: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "createItem(string,uint256)"(
      _id: string,
      _priceInWei: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    index(overrides?: CallOverrides): Promise<BigNumber>;

    "index()"(overrides?: CallOverrides): Promise<BigNumber>;

    items(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [number, string, BigNumber] & {
        _step: number;
        _id: string;
        _priceInWei: BigNumber;
      }
    >;

    "items(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [number, string, BigNumber] & {
        _step: number;
        _id: string;
        _priceInWei: BigNumber;
      }
    >;

    triggerDelivery(
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "triggerDelivery(uint256)"(
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    triggerPayment(
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "triggerPayment(uint256)"(
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    SupplyChainStep(_itemIndex: null, _step: null): EventFilter;
  };

  estimateGas: {
    createItem(
      _id: string,
      _priceInWei: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "createItem(string,uint256)"(
      _id: string,
      _priceInWei: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    index(overrides?: CallOverrides): Promise<BigNumber>;

    "index()"(overrides?: CallOverrides): Promise<BigNumber>;

    items(arg0: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;

    "items(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    triggerDelivery(
      _index: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "triggerDelivery(uint256)"(
      _index: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    triggerPayment(
      _index: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<BigNumber>;

    "triggerPayment(uint256)"(
      _index: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    createItem(
      _id: string,
      _priceInWei: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "createItem(string,uint256)"(
      _id: string,
      _priceInWei: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    index(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "index()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    items(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "items(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    triggerDelivery(
      _index: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "triggerDelivery(uint256)"(
      _index: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    triggerPayment(
      _index: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<PopulatedTransaction>;

    "triggerPayment(uint256)"(
      _index: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<PopulatedTransaction>;
  };
}
