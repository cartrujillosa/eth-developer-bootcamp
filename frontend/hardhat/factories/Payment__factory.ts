/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, BigNumberish } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { Payment } from "../Payment";

export class Payment__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _itemManager: string,
    _priceInWei: BigNumberish,
    _index: BigNumberish,
    overrides?: Overrides
  ): Promise<Payment> {
    return super.deploy(
      _itemManager,
      _priceInWei,
      _index,
      overrides || {}
    ) as Promise<Payment>;
  }
  getDeployTransaction(
    _itemManager: string,
    _priceInWei: BigNumberish,
    _index: BigNumberish,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(
      _itemManager,
      _priceInWei,
      _index,
      overrides || {}
    );
  }
  attach(address: string): Payment {
    return super.attach(address) as Payment;
  }
  connect(signer: Signer): Payment__factory {
    return super.connect(signer) as Payment__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Payment {
    return new Contract(address, _abi, signerOrProvider) as Payment;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ItemManager",
        name: "_itemManager",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_priceInWei",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "index",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "priceInWei",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516101e73803806101e78339818101604052606081101561003357600080fd5b81019080805190602001909291908051906020019092919080519060200190929190505050816000819055508060018190555082600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505061012e806100b96000396000f3fe60806040526004361060295760003560e01c80632986c0e514609c5780633c8da5881460c4576097565b36609757600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f193505050501580156094573d6000803e3d6000fd5b50005b600080fd5b34801560a757600080fd5b5060ae60ec565b6040518082815260200191505060405180910390f35b34801560cf57600080fd5b5060d660f2565b6040518082815260200191505060405180910390f35b60015481565b6000548156fea26469706673582212209835d0feb200787645fe8d070b8af12c6f2671626f7e56c74cbf73e2c488f8f364736f6c63430007030033";
